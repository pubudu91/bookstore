openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Bookstore
  license:
    name: MIT
servers:
  - url: http://bookstore.swagger.io/v1
paths:
  /books:
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of books
          headers:
            x-next:
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Books"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a book
      operationId: createBooks
      tags:
        - books
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /books/{bookId}:
    get:
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Book:
      type: object
      required:
        - id
        - name
        - author
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        author:
          type: string
    Books:
      type: array
      items:
        $ref: "#/components/schemas/Book"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string